# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

common_sources = [
  "idle/le_idle.c",
  "loop/le_epoll.c",
  "loop/le_loop.c",
  "signal/le_signal.c",
  "socket/le_socket.c",
  "task/le_asynctask.c",
  "task/le_streamtask.c",
  "task/le_task.c",
  "task/le_watchtask.c",
  "timer/le_timer.c",
  "utils/le_utils.c",
]

common_include = [
  "//base/startup/init/services/log",
  "//base/startup/init/interfaces/innerkits/include",
  "include",
  "loop",
  "socket",
  "task",
  "timer",
  "utils",
  "signal",
  "idle",
]

config("exported_header_files") {
  visibility = [ ":*" ]
  include_dirs = [ "//base/startup/init/services/loopevent/include" ]
}

if (defined(ohos_lite)) {
  static_library("loopevent") {
    sources = common_sources
    cflags = [ "-fPIC" ]
    include_dirs = common_include
    include_dirs += [ "//third_party/bounds_checking_function/include" ]
    defines = [ "_GNU_SOURCE" ]
    public_configs = [ ":exported_header_files" ]
  }
} else {
  import("//build/ohos.gni")

  ohos_static_library("loopevent") {
    sources = common_sources
    public_configs = [ ":exported_header_files" ]
    include_dirs = common_include
    external_deps = [ "bounds_checking_function:libsec_static" ]
    defines = [ "_GNU_SOURCE" ]
    part_name = "init"
    subsystem_name = "startup"
  }
}

group("loopeventgroup") {
  if (defined(ohos_lite)) {
    if (ohos_kernel_type == "linux") {
      deps = [ ":loopevent" ]
    }
  } else {
    deps = [ ":loopevent" ]
  }
}
